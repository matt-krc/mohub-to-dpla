name: Combine Data and Upload

on:
  workflow_run:
    workflows: [Crawl Heartland Hub]
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo "Workflow succeeded!"
  combine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download crawls
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: crawl.yml
          if_no_artifact_found: fail
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Combine files
        working-directory: ./
        run: python combine.py
      - name: Upload jsonl to artifact
        uses: actions/upload-artifact@v4
        with:
          name: mohub_ingest
          path: mohub_ingest.jsonl
      - name: Upload ingest report to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ingest_report
          path: report.txt

  upload_s3:
    runs-on: ubuntu-latest
    needs: combine
    strategy:
      matrix:
        python-version: [ "3.8" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download jsonl
        uses: actions/download-artifact@v3
        with:
          name: mohub_ingest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        working-directory: ./
        run: python upload_s3.py
